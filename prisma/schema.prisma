generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type EventsTimeZoneList {
  countryCode String
  name        String
}

type EventsTimeZoneOrigin {
  countryCode String
  date        DateTime @db.Date
  name        String
}

type EventsTimeZone {
  list   EventsTimeZoneList[]
  origin EventsTimeZoneOrigin
}

model Events {
  id          String         @id @default(auto()) @map("_id") @db.ObjectId
  description String
  img         String?
  lang        String
  name        String
  tags        String[]
  timeZone    EventsTimeZone
  createdAt   DateTime       @default(now())
  updatedAt   DateTime?      @updatedAt
  url         String?

  Users  Users  @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  userId String @db.ObjectId

  @@unique([id, timeZone.list.countryCode, timeZone.list.name])
}

type TimeZonesList {
  capital   Boolean
  dst       Boolean
  initial   String
  offset    Float
  zoneNames String[]
}

model TimeZones {
  id          String          @id @default(auto()) @map("_id") @db.ObjectId
  countryCode String
  timeZone    TimeZonesList[]
}

enum Providers {
  google
  facebook
}

enum Role {
  USER
  ADMIN
  MANAGER
}

type UsersProviders {
  name Providers
  user String
}

model Users {
  id        String           @id @default(auto()) @map("_id") @db.ObjectId
  userName  String           @unique
  providers UsersProviders[]
  role      Role             @default(USER)
  createdAt DateTime         @default(now())
  updatedAt DateTime?        @updatedAt

  Events Events[]

  @@unique([id, providers.name, providers.user])
}
